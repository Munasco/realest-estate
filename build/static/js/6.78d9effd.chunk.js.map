{"version":3,"sources":["containers/Listings.js","components/Card.js","components/Pagination.js"],"names":["Listings","useState","listings","setListings","count","setCount","previous","setPrevious","next","setNext","active","setActive","useEffect","window","scrollTo","a","axios","get","res","data","results","console","log","fetchData","className","name","content","display","map","listing","index","push","key","title","address","city","state","price","sale_type","home_type","bedrooms","bathrooms","sqft","photo_main","slug","i","length","displayListings","itemsPerPage","visitPage","page","then","catch","err","Card","props","src","alt","toString","replace","to","Pagination","onClick","numbers","pageNumber","style","getNumbers"],"mappings":"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","file":"static/js/6.78d9effd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nimport Card from '../components/Card'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\n\r\nfunction Listings() {\r\n\r\n    const [listings, setListings] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [previous, setPrevious] = useState('')\r\n    const [next, setNext] = useState('')\r\n    const [active, setActive] = useState(1)\r\n\r\n    useEffect(() => {\r\n       window.scrollTo(0, 0)\r\n\r\n       const fetchData = async ()=> {\r\n           try{\r\n               const res = await axios.get('http://161.35.111.5/api/listings/?page=1');\r\n               setListings(res.data.results)\r\n               setCount(res.data.count)\r\n               setPrevious(res.data.previous)\r\n               setNext(res.data.next)\r\n           }\r\n           catch(err){\r\n                console.log(err)\r\n           }\r\n        }\r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    const displayListings = ()=> {\r\n        let display = []\r\n        let results = []\r\n\r\n        listings.map((listing, index)=>{\r\n            return display.push(\r\n                <Card key={index}\r\n            title={listing.title}\r\n            address={listing.address}\r\n            city={listing.city}\r\n            state={listing.state}\r\n            price={listing.price}\r\n            sale_type={listing.title}\r\n            home_type={listing.home_type}\r\n            bedrooms ={listing.bedrooms}\r\n            bathrooms={listing.bathrooms}\r\n            sqft={listing.sqft}\r\n            photo_main={listing.photo_main}\r\n            slug={listing.slug}\r\n            />\r\n            )\r\n        })\r\n\r\n        for(let i=0; i<listings.length; i+=3){\r\n\r\n            results.push(\r\n                <div key={i} className=\"row\">\r\n                    <div className=\"col-1-of-3\">\r\n                        {display[i]} \r\n                    </div>\r\n                    <div className=\"col-1-of-3\">\r\n                        {display[i+1] ? display[i+1]: null} \r\n                    </div>\r\n                    <div className=\"col-1-of-3\">\r\n                        {display[i+2] ? display[i+2]: null} \r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return results\r\n    }\r\n\r\n    const visitPage = (page)=> {\r\n        axios.get(`http://161.35.111.5/api/listings/?page=${page}`)\r\n        .then(res=> {\r\n            setListings(res.data.results)\r\n            setActive(page)\r\n            setPrevious(res.data.previous)\r\n            setNext(res.data.next)\r\n        })\r\n        .catch(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const previous_number = ()=> {\r\n        axios.get(previous)\r\n        .then(res=> {\r\n            setListings(res.data.results)\r\n            setPrevious(res.data.previous)\r\n            setNext(res.data.next)\r\n            if(previous)\r\n                setActive(active-1)\r\n\r\n        })\r\n        .catch(err=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    const next_number = ()=> {\r\n        axios.get(next)\r\n        .then(res=> {\r\n            setListings(res.data.results)\r\n            setPrevious(res.data.previous)\r\n            setNext(res.data.next)\r\n            if(next)\r\n                setActive(active-1)\r\n\r\n        })\r\n        .catch(err=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <main className='listings'>\r\n            <Helmet>\r\n                <title>Realest Estate - Listings</title>\r\n                <meta name='description' content='Listings page'/>\r\n            </Helmet>\r\n            <section className=\"listings__listings\">\r\n                {displayListings()}\r\n            </section>\r\n            <section className=\"listings__pagination\">\r\n                <div className=\"row\">\r\n                <Pagination\r\n                    itemsPerPage= {3}\r\n                    count={count}\r\n                    visitPage={visitPage}\r\n                    previous={previous_number}\r\n                    next = {next_number}\r\n                    active ={active}\r\n                    setActive ={setActive} />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Listings\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    const numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n    }\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h3 className=\"card__title\">{props.title}</h3>\r\n            <div className=\"card__header\">\r\n                <img src={props.photo_main} alt=\"House\" className=\"card__header__photo\"/>\r\n            </div>\r\n            <p className=\"card__location\">{props.address}, {props.city}, {props.state}</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-2-of-3\">\r\n                    <p className=\"card__info\">Price: ${numberWithCommas(props.price)}</p>\r\n                    <p className=\"card__info\">Bedrooms: {props.bedrooms}</p>\r\n                    <p className=\"card__info\">Bathrooms: {props.bathrooms}</p>\r\n                </div>\r\n                <div className=\"col-1-of-3\">\r\n                    <p className=\"card__sale_type\">{props.sale_type}</p>\r\n                    <p className=\"card__home_type\">{props.home_type}</p>\r\n                    <p className=\"card__sqft\">Sqft: {props.sqft}</p>\r\n                </div>\r\n            </div>\r\n            <Link className=\"card__link\" to={`/listings/${props.slug}`}>View Listing</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    photo_main: PropTypes.string.isRequired,\r\n    address: PropTypes.string.isRequired,\r\n    city: PropTypes.string.isRequired,\r\n    state: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    bedrooms: PropTypes.number.isRequired,\r\n    bathrooms: PropTypes.string.isRequired,\r\n    sale_type: PropTypes.string.isRequired,\r\n    home_type: PropTypes.string.isRequired,\r\n    sqft: PropTypes.number.isRequired,\r\n    slug: PropTypes.string.isRequired,\r\n\r\n}\r\nexport default Card\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Pagination(props) {\r\n\r\n    const getNumbers = () => {\r\n        let numbers = []\r\n        let itemsPerPage = props.itemsPerPage\r\n        let pageNumber = 1;\r\n\r\n        for(let i=0; i< props.count; i+= itemsPerPage){\r\n            const page = pageNumber;\r\n            let style= 'pagination__number';\r\n            let content = null\r\n\r\n            if(props.active === page){\r\n                style = 'pagination__number pagination__number__active'\r\n                content = (\r\n                    <div key={i} className={style}>\r\n                        {pageNumber}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            else {\r\n                style = 'pagination__number pagination__number__active'\r\n                content = (\r\n                    <div key={i} onClick = {() => props.visitPage(page)}\r\n                     className={style}>\r\n                        {pageNumber}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            numbers.push(\r\n                content\r\n            );\r\n            pageNumber++;\r\n        }\r\n        return numbers;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            <div onClick={()=> props.previous()} className='pagination__number'>\r\n                Previous\r\n            </div>\r\n            {getNumbers()}\r\n            <div onClick={()=> props.next()} className='pagination__number'>\r\n                Next\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsPerPage: PropTypes.number.isRequired,\r\n    count : PropTypes.number.isRequired,\r\n    active : PropTypes.number.isRequired,\r\n    visitPage : PropTypes.func.isRequired,\r\n    previous : PropTypes.func.isRequired,\r\n    next: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n"],"sourceRoot":""}