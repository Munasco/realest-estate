{"version":3,"sources":["actions/alert.js","actions/auth.js","actions/types.js","components/Alert.js","components/Navbar.js","hocs/Layout.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","type","SET_ALERT","payload","setTimeout","REMOVE_ALERT","logIn","email","password","a","config","headers","body","JSON","stringify","axios","post","res","LOGIN_SUCCESS","data","LOGIN_FAIL","signUp","name","password2","then","SIGNUP_SUCCESS","catch","error","SIGNUP_FAIL","logOut","LOGOUT","connect","state","alerts","alert","length","map","key","className","auth","isAuthenticated","loading","authLinks","onClick","href","guestLinks","to","exact","Layout","props","children","initialState","token","localStorage","getItem","rootReducer","combineReducers","actions","filter","setItem","access","removeItem","middleware","thunk","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","Component","component","rest","render","Home","React","lazy","About","Signin","Signup","Listings","ListingDetail","Contact","NotFound","App","Suspense","fallback","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ada285fa.chunk.js","sourcesContent":["import {v4 as uuid} from 'uuid';\r\n\r\nimport {SET_ALERT, REMOVE_ALERT} from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout=5000) => dispatch => {\r\n    const id = uuid();\r\n    dispatch({\r\n        type: SET_ALERT, \r\n        payload: {msg, alertType, id}\r\n\r\n    });\r\n\r\n    setTimeout(()=> dispatch({type: REMOVE_ALERT, payload: id}), timeout\r\n    );\r\n}","import {SIGNUP_FAIL, SIGNUP_SUCCESS,\r\nLOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'\r\nimport {setAlert} from './alert'\r\nimport axios from 'axios'\r\n\r\nexport const logIn = (email, password)=> async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try {\r\n        const res = await axios.post('http://161.35.111.5/api/token/', body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Authenticated Successfully', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Error Authenticating', 'error'))\r\n    }\r\n} \r\nexport const signUp = (name, email, password, password2) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name, email, password, password2})\r\n    axios.post('http://161.35.111.5/api/accounts/signup', body, config)\r\n    .then(res=> {\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(logIn(email, password))\r\n    })\r\n    .catch(error=> {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Error Authenticating', 'error'))\r\n    })\r\n    \r\n}\r\n\r\nexport const logOut = () => dispatch=>{\r\n    dispatch(setAlert('Log Out Successful', 'success'));\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL= 'SIGNUP_FAIL'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && \r\n    alerts.length > 0 && alerts.map(\r\n        alert => (\r\n            <div key={alert.id} className={`alert alert--${alert.alertType}`}>\r\n                {alert.msg}\r\n            </div>    \r\n        )\r\n    )\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import React, {Fragment} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {logOut} from '../actions/auth'\r\nimport Alert from './Alert';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Navbar({auth: {isAuthenticated, loading}, logOut}) {\r\n    \r\n    const authLinks = (\r\n        <a className=\"navbar__top__auth__link\" onClick={logOut} href=\"#!\">\r\n            Logout\r\n        </a>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link className=\"navbar__top__auth__link\" to='/login'>Login</Link>\r\n            <Link className=\"navbar__top__auth__link\" to='/signup'>Sign Up</Link>\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav>\r\n                <div className='navbar__top'>\r\n                    <div className=\"navbar__top__logo\">\r\n                        <Link className=\"navbar__top__logo__link\" to=\"/\">\r\n                            Realest Estate\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"navbar__top__auth\">\r\n                        {!loading && (\r\n                            <Fragment>\r\n                                {isAuthenticated ? authLinks: guestLinks}\r\n                            </Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"navbar__bottom\">\r\n                    <li className=\"navbar__bottom__item\">\r\n                        <NavLink className=\"navbar__bottom__item__link\" exact to='/'>\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"navbar__bottom__item\">\r\n                        <NavLink className=\"navbar__bottom__item__link\" exact to='/listings'>\r\n                            Listings\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"navbar__bottom__item\">\r\n                        <NavLink className=\"navbar__bottom__item__link\" exact to='/about'>\r\n                            About\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"navbar__bottom__item\">\r\n                        <NavLink className=\"navbar__bottom__item__link\" exact to='/contact'>\r\n                            Contact\r\n                        </NavLink>\r\n                    </li>\r\n                </div>\r\n            </nav>\r\n            <Alert />\r\n        </Fragment>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    logOut: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {logOut})(Navbar)\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n\r\nfunction Layout(props) {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state=initialState, actions){\r\n    const {type, payload} = actions\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=>alert.id !== payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    SIGNUP_FAIL, SIGNUP_SUCCESS, \r\n    LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: false\r\n}\r\n\r\nexport default function(state=initialState, actions){\r\n    const {type, payload} = actions\r\n\r\n    switch(type){\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.access);\r\n            return {\r\n                ...state, isAuthenticated: true, \r\n                loading: false, \r\n                token: payload.access\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            localStorage.setItem('token', payload.access);\r\n            return {\r\n                ...state, isAuthenticated: false, \r\n                loading: true\r\n            }\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state, token: null, \r\n                isAuthenticated:false, \r\n                loading:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\n\r\nconst rootReducer = combineReducers({\r\n    alert, \r\n    auth, \r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers'\r\n\r\nconst initialState = {\r\n\r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n    rootReducers, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nfunction PrivateRoute({component: Component, auth: {isAuthenticated, loading},\r\n     ...rest}) {\r\n\r\n    return (\r\n      <Route {...rest}\r\n      render={\r\n          props=> !isAuthenticated && !loading ? \r\n          (<Redirect to='/login' /> ): (<Component {...props} />)\r\n      } />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Layout from './hocs/Layout';\nimport './sass/main.scss';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport PrivateRoute from './components/PrivateRoute';\n\n\nconst loading = () => <div className=\"App-header\">Loading...</div>;\n\n// Containers\nconst Home = React.lazy(() => import('./containers/Home'));\nconst About = React.lazy(() => import('./containers/About'));\nconst Signin = React.lazy(() => import('./containers/Signin'));\nconst Signup = React.lazy(() => import('./containers/Signup'));\nconst Listings = React.lazy(() => import('./containers/Listings'));\nconst ListingDetail = React.lazy(() => import('./containers/ListingDetail'));\nconst Contact = React.lazy(() => import('./containers/Contact'));\nconst NotFound = React.lazy(() => import('./components/NotFound'));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Layout>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact' component={Contact} />\n              <Route exact path='/listings' component={Listings} />\n              <PrivateRoute exact path='/listings/:id' component={ListingDetail} />\n              <Route exact path='/login' component={Signin} />\n              <Route exact path='/signup' component={Signup} />\n              <Route component={NotFound} />\n              <Route component={NotFound} />\n            </Switch>\n          </React.Suspense>\n        </Layout>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}